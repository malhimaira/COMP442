[functionKeyWord, function, 2]
[id, printArray, 2] [openBracketRound, (, 2] [closeBracketRound, ), 2] [lambdaExpression, =>, 2] [voidKeyWord, void, 2]
[openBracketCurly, {, 3]
[id, arr, 4] [openBracketSquare, [, 4] [id, j, 4] [closeBracketSquare, ], 4] [equals, =, 4] [id, arr, 4] [openBracketSquare, [, 4] [id, j, 4] [plus, +, 4] [integerType, 1, 4] [closeBracketSquare, ], 4] [semicolon, ;, 4]
[inlineComment, // 3.1.1, 5]
[localvarKeyWord, localvar, 6] [id, intEx, 6] [colon, :, 6] [integerKeyWord, integer, 6] [semicolon, ;, 6]
[localvarKeyWord, localvar, 7] [id, i, 7] [colon, :, 7] [integerKeyWord, integer, 7] [semicolon, ;, 7]
[localvarKeyWord, localvar, 8] [id, floatEx, 8] [colon, :, 8] [floatKeyWord, float, 8] [semicolon, ;, 8]
[localvarKeyWord, localvar, 9] [id, idEx, 9] [colon, :, 9] [id, id, 9] [semicolon, ;, 9]
[localvarKeyWord, localvar, 10] [id, f1, 10] [colon, :, 10] [id, LINEAR, 10] [openBracketRound, (, 10] [integerType, 2, 10] [comma, ,, 10] [floatType, 3.5, 10] [closeBracketRound, ), 10] [semicolon, ;, 10]
[localvarKeyWord, localvar, 11] [id, f2, 11] [colon, :, 11] [id, QUADRATIC, 11] [openBracketRound, (, 11] [minus, -, 11] [floatType, 2.0, 11] [comma, ,, 11] [floatType, 1.0, 11] [comma, ,, 11] [floatType, 0.0, 11] [closeBracketRound, ), 11] [semicolon, ;, 11]
[localvarKeyWord, localvar, 12] [id, c1, 12] [colon, :, 12] [id, QUADRATIC, 12] [openBracketRound, (, 12] [closeBracketRound, ), 12] [semicolon, ;, 12]
[id, floatEx, 13] [equals, =, 13] [floatType, 0.1, 13] [semicolon, ;, 13]
[id, i, 14] [equals, =, 14] [integerType, 0, 14] [semicolon, ;, 14]
[id, idEx, 15] [equals, =, 15] [id, abc_1abc, 15] [semicolon, ;, 15]
[id, intEx, 16] [equals, =, 16] [id, i, 16] [plus, +, 16] [integerType, 2, 16] [semicolon, ;, 16]
[whileKeyWord, while, 17] [openBracketRound, (, 17] [id, i, 17] [lessThan, <, 17] [id, intEx, 17] [closeBracketRound, ), 17] [openBracketCurly, {, 17]
[writeKeyWord, write, 18] [openBracketRound, (, 18] [id, arr, 18] [openBracketSquare, [, 18] [id, i, 18] [closeBracketSquare, ], 18] [closeBracketRound, ), 18] [semicolon, ;, 18]
[id, i, 19] [equals, =, 19] [id, i, 19] [plus, +, 19] [integerType, 1, 19] [semicolon, ;, 19]
[closedBracketCurly, }, 20] [semicolon, ;, 20]
[closedBracketCurly, }, 21]
[functionKeyWord, function, 23] [id, bubbleSort, 23] [openBracketRound, (, 23] [id, arr, 23] [colon, :, 23] [integerKeyWord, integer, 23] [openBracketSquare, [, 23] [closeBracketSquare, ], 23] [comma, ,, 23] [id, size, 23] [colon, :, 23] [integerKeyWord, integer, 23] [closeBracketRound, ), 23] [lambdaExpression, =>, 23] [voidKeyWord, void, 23]
[openBracketCurly, {, 24]
[id, n, 25] [equals, =, 25] [id, size, 25] [semicolon, ;, 25]
[id, i, 26] [equals, =, 26] [integerType, 0, 26] [semicolon, ;, 26]
[id, j, 27] [equals, =, 27] [integerType, 0, 27] [semicolon, ;, 27]
[id, temp, 28] [equals, =, 28] [integerType, 1, 28] [plus, +, 28] [integerType, 2, 28] [minus, -, 28] [integerType, 3, 28] [multiply, *, 28] [integerType, 4, 28] [divide, /, 28] [integerType, 8, 28] [semicolon, ;, 28]
[whileKeyWord, while, 29] [openBracketRound, (, 29] [id, i, 29] [not, not, 29] [id, n, 29] [minus, -, 29] [integerType, 1, 29] [closeBracketRound, ), 29] [openBracketCurly, {, 29]
[inlineComment, // 3.1.4 and 3.1.5, 30]
[whileKeyWord, while, 31] [openBracketRound, (, 31] [id, j, 31] [plus, +, 31] [integerType, 2, 31] [lessThanOrEqualTo, <=, 31] [id, n, 31] [minus, -, 31] [id, i, 31] [multiply, *, 31] [integerType, 1, 31] [divide, /, 31] [integerType, 3, 31] [plus, +, 31] [id, i, 31] [closeBracketRound, ), 31] [openBracketCurly, {, 31]
[ifKeyWord, if, 32] [openBracketRound, (, 32] [id, arr, 32] [openBracketSquare, [, 32] [id, j, 32] [closeBracketSquare, ], 32] [greaterThan, >, 32] [id, arr, 32] [openBracketSquare, [, 32] [id, j, 32] [plus, +, 32] [integerType, 1, 32] [closeBracketSquare, ], 32] [closeBracketRound, ), 32]
[thenKeyWord, then, 33] [openBracketCurly, {, 33]
[inlineComment, // 3.1.9, 34]
[id, temp, 35] [equals, =, 35] [id, arr, 35] [openBracketSquare, [, 35] [id, j, 35] [closeBracketSquare, ], 35] [openBracketSquare, [, 35] [id, i, 35] [closeBracketSquare, ], 35] [semicolon, ;, 35]
[id, arr, 36] [openBracketSquare, [, 36] [id, j, 36] [closeBracketSquare, ], 36] [equals, =, 36] [id, arr, 36] [openBracketSquare, [, 36] [id, j, 36] [plus, +, 36] [integerType, 1, 36] [closeBracketSquare, ], 36] [semicolon, ;, 36]
[id, arr, 37] [openBracketSquare, [, 37] [id, j, 37] [plus, +, 37] [integerType, 1, 37] [closeBracketSquare, ], 37] [equals, =, 37] [id, temp, 37] [semicolon, ;, 37]
[closedBracketCurly, }, 38] [elseKeyWord, else, 38] [semicolon, ;, 38]
[id, j, 39] [equals, =, 39] [id, j, 39] [plus, +, 39] [integerType, 1, 39] [semicolon, ;, 39]
[closedBracketCurly, }, 40] [semicolon, ;, 40]
[id, i, 41] [equals, =, 41] [id, i, 41] [plus, +, 41] [integerType, 1, 41] [semicolon, ;, 41]
[closedBracketCurly, }, 42] [semicolon, ;, 42]
[closedBracketCurly, }, 43]
[inlineComment, // 3.1.3, 44]
[classKeyWord, class, 45] [id, POLYNOMIAL, 45] [openBracketCurly, {, 45]
[publicKeyWord, public, 46] [functionKeyWord, function, 46] [id, evaluate, 46] [colon, :, 46] [openBracketRound, (, 46] [id, x, 46] [colon, :, 46] [floatKeyWord, float, 46] [closeBracketRound, ), 46] [lambdaExpression, =>, 46] [floatKeyWord, float, 46] [semicolon, ;, 46]
[publicKeyWord, public, 47] [functionKeyWord, function, 47] [id, evaluate, 47] [colon, :, 47] [openBracketRound, (, 47] [id, q, 47] [colon, :, 47] [integerKeyWord, integer, 47] [closeBracketRound, ), 47] [lambdaExpression, =>, 47] [floatKeyWord, float, 47] [semicolon, ;, 47]
[privateKeyWord, private, 48] [attributeKeyWord, attribute, 48] [id, a, 48] [colon, :, 48] [floatKeyWord, float, 48] [semicolon, ;, 48]
[privateKeyWord, private, 49] [attributeKeyWord, attribute, 49] [id, b, 49] [colon, :, 49] [floatKeyWord, float, 49] [semicolon, ;, 49]
[privateKeyWord, private, 50] [attributeKeyWord, attribute, 50] [id, b, 50] [colon, :, 50] [floatKeyWord, float, 50] [semicolon, ;, 50]
[closedBracketCurly, }, 51] [semicolon, ;, 51]
[inlineComment, // 3.1.3, 52]
[classKeyWord, class, 53] [id, QUADRATIC, 53] [isaKeyWord, isa, 53] [id, POLYNOMIAL, 53] [openBracketCurly, {, 53]
[privateKeyWord, private, 54] [attributeKeyWord, attribute, 54] [id, a, 54] [colon, :, 54] [floatKeyWord, float, 54] [semicolon, ;, 54]
[privateKeyWord, private, 55] [attributeKeyWord, attribute, 55] [id, b, 55] [colon, :, 55] [floatKeyWord, float, 55] [semicolon, ;, 55]
[privateKeyWord, private, 56] [attributeKeyWord, attribute, 56] [id, c, 56] [colon, :, 56] [floatKeyWord, float, 56] [semicolon, ;, 56]
[publicKeyWord, public, 58] [constructorKeyWord, constructor, 58] [colon, :, 58] [openBracketRound, (, 58] [id, A, 58] [colon, :, 58] [floatKeyWord, float, 58] [comma, ,, 58] [id, B, 58] [colon, :, 58] [floatKeyWord, float, 58] [comma, ,, 58] [id, C, 58] [colon, :, 58] [floatKeyWord, float, 58] [closeBracketRound, ), 58] [semicolon, ;, 58]
[inlineComment, // 3.1.2, 59]
[publicKeyWord, public, 60] [functionKeyWord, function, 60] [id, evaluate, 60] [colon, :, 60] [openBracketRound, (, 60] [id, x, 60] [colon, :, 60] [floatKeyWord, float, 60] [closeBracketRound, ), 60] [lambdaExpression, =>, 60] [floatKeyWord, float, 60] [semicolon, ;, 60]
[closedBracketCurly, }, 61] [semicolon, ;, 61]
[functionKeyWord, function, 64] [id, POLYNOMIAL, 64] [doubleColon, ::, 64] [id, evaluate, 64] [openBracketRound, (, 64] [id, x, 64] [colon, :, 64] [floatKeyWord, float, 64] [closeBracketRound, ), 64] [lambdaExpression, =>, 64] [floatKeyWord, float, 64]
[openBracketCurly, {, 65]
[returnKeyWord, return, 66] [openBracketRound, (, 66] [integerType, 0, 66] [closeBracketRound, ), 66] [semicolon, ;, 66]
[closedBracketCurly, }, 67]
[inlineComment, // 3.1.2, 68]
[functionKeyWord, function, 69] [id, QUADRATIC, 69] [doubleColon, ::, 69] [constructorKeyWord, constructor, 69] [openBracketRound, (, 69] [id, A, 69] [colon, :, 69] [floatKeyWord, float, 69] [comma, ,, 69] [id, B, 69] [colon, :, 69] [floatKeyWord, float, 69] [comma, ,, 69] [id, C, 69] [colon, :, 69] [floatKeyWord, float, 69] [closeBracketRound, ), 69]
[openBracketCurly, {, 70]
[closedBracketCurly, }, 72]
[functionKeyWord, function, 74] [id, LINEAR, 74] [doubleColon, ::, 74] [id, evaluate, 74] [openBracketRound, (, 74] [id, x, 74] [colon, :, 74] [floatKeyWord, float, 74] [closeBracketRound, ), 74] [lambdaExpression, =>, 74] [floatKeyWord, float, 74]
[openBracketCurly, {, 75]
[localvarKeyWord, localvar, 76] [id, result, 76] [colon, :, 76] [floatKeyWord, float, 76] [semicolon, ;, 76]
[id, result, 77] [equals, =, 77] [floatType, 0.0, 77] [semicolon, ;, 77]
[id, result, 78] [equals, =, 78] [id, a, 78] [multiply, *, 78] [id, x, 78] [plus, +, 78] [id, b, 78] [semicolon, ;, 78]
[inlineComment, // 3.1.5, 79]
[returnKeyWord, return, 80] [openBracketRound, (, 80] [id, result, 80] [closeBracketRound, ), 80] [semicolon, ;, 80]
[closedBracketCurly, }, 81]
[inlineComment, // 3.1.2, 83]
[functionKeyWord, function, 84] [id, main, 84] [openBracketRound, (, 84] [closeBracketRound, ), 84] [lambdaExpression, =>, 84] [voidKeyWord, void, 84]
[openBracketCurly, {, 85]
[localvarKeyWord, localvar, 86] [id, f1, 86] [colon, :, 86] [id, LINEAR, 86] [openBracketRound, (, 86] [integerType, 2, 86] [comma, ,, 86] [floatType, 3.5, 86] [closeBracketRound, ), 86] [semicolon, ;, 86]
[localvarKeyWord, localvar, 87] [id, f2, 87] [colon, :, 87] [id, QUADRATIC, 87] [openBracketRound, (, 87] [minus, -, 87] [floatType, 2.0, 87] [comma, ,, 87] [floatType, 1.0, 87] [comma, ,, 87] [floatType, 0.0, 87] [closeBracketRound, ), 87] [semicolon, ;, 87]
[localvarKeyWord, localvar, 88] [id, counter, 88] [colon, :, 88] [integerKeyWord, integer, 88] [semicolon, ;, 88]
[whileKeyWord, while, 90] [openBracketRound, (, 90] [id, counter, 90] [lessThanOrEqualTo, <=, 90] [integerType, 10, 90] [closeBracketRound, ), 90]
[openBracketCurly, {, 91]
[inlineComment, // 3.1.5 and 3.1.7 and 3.1.8, 92]
[readKeyWord, read, 93] [openBracketRound, (, 93] [id, counter, 93] [closeBracketRound, ), 93] [semicolon, ;, 93]
[writeKeyWord, write, 94] [openBracketRound, (, 94] [id, f1, 94] [period, ., 94] [id, evaluate, 94] [openBracketRound, (, 94] [id, counter, 94] [closeBracketRound, ), 94] [closeBracketRound, ), 94] [semicolon, ;, 94]
[writeKeyWord, write, 95] [openBracketRound, (, 95] [id, f2, 95] [period, ., 95] [id, evaluate, 95] [openBracketRound, (, 95] [id, counter, 95] [closeBracketRound, ), 95] [closeBracketRound, ), 95] [semicolon, ;, 95]
[closedBracketCurly, }, 96] [semicolon, ;, 96]
[closedBracketCurly, }, 97]
[EOF, EOF, 101]