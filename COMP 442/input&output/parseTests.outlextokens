[functionKeyWord, function, 1] [id, printArray, 1] [openBracketRound, (, 1] [closeBracketRound, ), 1] [lambdaExpression, =>, 1] [voidKeyWord, void, 1]
[openBracketCurly, {, 2]
[inlineComment, // 3.2.1 2 3, 3]
[localvarKeyWord, localvar, 4] [id, intEx, 4] [colon, :, 4] [integerKeyWord, integer, 4] [functionKeyWord, function, 4]
[inlineComment, // 3.1.1 (can also add invalid char to see errors), 5]
[localvarKeyWord, localvar, 6] [id, intEx, 6] [colon, :, 6] [integerKeyWord, integer, 6] [semicolon, ;, 6]
[localvarKeyWord, localvar, 7] [id, i, 7] [colon, :, 7] [integerKeyWord, integer, 7] [semicolon, ;, 7]
[localvarKeyWord, localvar, 8] [id, floatEx, 8] [colon, :, 8] [floatKeyWord, float, 8] [semicolon, ;, 8]
[localvarKeyWord, localvar, 9] [id, idEx, 9] [colon, :, 9] [id, id, 9] [semicolon, ;, 9]
[localvarKeyWord, localvar, 10] [id, f1, 10] [colon, :, 10] [id, LINEAR, 10] [openBracketRound, (, 10] [integerType, 2, 10] [comma, ,, 10] [floatType, 3.5, 10] [closeBracketRound, ), 10] [semicolon, ;, 10]
[localvarKeyWord, localvar, 11] [id, f2, 11] [colon, :, 11] [id, QUADRATIC, 11] [openBracketRound, (, 11] [minus, -, 11] [floatType, 2.0, 11] [comma, ,, 11] [floatType, 1.0, 11] [comma, ,, 11] [floatType, 0.0, 11] [closeBracketRound, ), 11] [semicolon, ;, 11]
[localvarKeyWord, localvar, 12] [id, c1, 12] [colon, :, 12] [id, QUADRATIC, 12] [openBracketRound, (, 12] [closeBracketRound, ), 12] [semicolon, ;, 12]
[id, floatEx, 13] [equals, =, 13] [floatType, 0.1, 13] [semicolon, ;, 13]
[id, i, 14] [equals, =, 14] [integerType, 0, 14] [semicolon, ;, 14]
[id, idEx, 15] [equals, =, 15] [id, abc_1abc, 15] [semicolon, ;, 15]
[id, intEx, 16] [equals, =, 16] [id, i, 16] [plus, +, 16] [integerType, 2, 16] [semicolon, ;, 16]
[inlineComment, // 3.1.9, 17]
[id, arr, 18] [openBracketSquare, [, 18] [id, j, 18] [closeBracketSquare, ], 18] [equals, =, 18] [id, arr, 18] [openBracketSquare, [, 18] [id, j, 18] [plus, +, 18] [integerType, 1, 18] [closeBracketSquare, ], 18] [semicolon, ;, 18]
[whileKeyWord, while, 19] [openBracketRound, (, 19] [id, i, 19] [lessThan, <, 19] [id, intEx, 19] [closeBracketRound, ), 19] [openBracketCurly, {, 19]
[writeKeyWord, write, 20] [openBracketRound, (, 20] [id, arr, 20] [openBracketSquare, [, 20] [id, i, 20] [closeBracketSquare, ], 20] [closeBracketRound, ), 20] [semicolon, ;, 20]
[id, i, 21] [equals, =, 21] [id, i, 21] [plus, +, 21] [integerType, 1, 21] [semicolon, ;, 21]
[closedBracketCurly, }, 22] [semicolon, ;, 22]
[closedBracketCurly, }, 23]
[functionKeyWord, function, 25] [id, bubbleSort, 25] [openBracketRound, (, 25] [id, arr, 25] [colon, :, 25] [integerKeyWord, integer, 25] [openBracketSquare, [, 25] [closeBracketSquare, ], 25] [comma, ,, 25] [id, size, 25] [colon, :, 25] [integerKeyWord, integer, 25] [closeBracketRound, ), 25] [lambdaExpression, =>, 25] [voidKeyWord, void, 25]
[openBracketCurly, {, 26]
[id, n, 27] [equals, =, 27] [id, size, 27] [semicolon, ;, 27]
[id, i, 28] [equals, =, 28] [integerType, 0, 28] [semicolon, ;, 28]
[id, j, 29] [equals, =, 29] [integerType, 0, 29] [semicolon, ;, 29]
[id, temp, 30] [equals, =, 30] [integerType, 1, 30] [plus, +, 30] [integerType, 2, 30] [minus, -, 30] [integerType, 3, 30] [multiply, *, 30] [integerType, 4, 30] [divide, /, 30] [integerType, 8, 30] [semicolon, ;, 30]
[whileKeyWord, while, 31] [openBracketRound, (, 31] [id, i, 31] [angleBrackets, <>, 31] [id, n, 31] [minus, -, 31] [integerType, 1, 31] [closeBracketRound, ), 31] [openBracketCurly, {, 31]
[inlineComment, // 3.1.4 and 3.1.5, 32]
[whileKeyWord, while, 33] [openBracketRound, (, 33] [id, j, 33] [plus, +, 33] [integerType, 2, 33] [lessThanOrEqualTo, <=, 33] [id, n, 33] [minus, -, 33] [id, i, 33] [multiply, *, 33] [integerType, 1, 33] [divide, /, 33] [integerType, 3, 33] [plus, +, 33] [id, i, 33] [closeBracketRound, ), 33] [openBracketCurly, {, 33]
[ifKeyWord, if, 34] [openBracketRound, (, 34] [id, arr, 34] [openBracketSquare, [, 34] [id, j, 34] [closeBracketSquare, ], 34] [greaterThan, >, 34] [id, arr, 34] [openBracketSquare, [, 34] [id, j, 34] [plus, +, 34] [integerType, 1, 34] [closeBracketSquare, ], 34] [closeBracketRound, ), 34]
[thenKeyWord, then, 35] [openBracketCurly, {, 35]
[inlineComment, // 3.1.9, 36]
[id, temp, 37] [equals, =, 37] [id, arr, 37] [openBracketSquare, [, 37] [id, j, 37] [closeBracketSquare, ], 37] [openBracketSquare, [, 37] [id, i, 37] [closeBracketSquare, ], 37] [semicolon, ;, 37]
[id, arr, 38] [openBracketSquare, [, 38] [id, j, 38] [closeBracketSquare, ], 38] [equals, =, 38] [id, arr, 38] [openBracketSquare, [, 38] [id, j, 38] [plus, +, 38] [integerType, 1, 38] [closeBracketSquare, ], 38] [semicolon, ;, 38]
[id, arr, 39] [openBracketSquare, [, 39] [id, j, 39] [plus, +, 39] [integerType, 1, 39] [closeBracketSquare, ], 39] [equals, =, 39] [id, temp, 39] [semicolon, ;, 39]
[closedBracketCurly, }, 40] [elseKeyWord, else, 40] [semicolon, ;, 40]
[id, j, 41] [equals, =, 41] [id, j, 41] [plus, +, 41] [integerType, 1, 41] [semicolon, ;, 41]
[closedBracketCurly, }, 42] [semicolon, ;, 42]
[id, i, 43] [equals, =, 43] [id, i, 43] [plus, +, 43] [integerType, 1, 43] [semicolon, ;, 43]
[closedBracketCurly, }, 44] [semicolon, ;, 44]
[closedBracketCurly, }, 45]
[inlineComment, // 3.1.3, 46]
[classKeyWord, class, 47] [id, POLYNOMIAL, 47] [openBracketCurly, {, 47]
[publicKeyWord, public, 48] [functionKeyWord, function, 48] [id, evaluate, 48] [colon, :, 48] [openBracketRound, (, 48] [id, x, 48] [colon, :, 48] [floatKeyWord, float, 48] [closeBracketRound, ), 48] [lambdaExpression, =>, 48] [floatKeyWord, float, 48] [semicolon, ;, 48]
[publicKeyWord, public, 49] [functionKeyWord, function, 49] [id, evaluate, 49] [colon, :, 49] [openBracketRound, (, 49] [id, q, 49] [colon, :, 49] [integerKeyWord, integer, 49] [closeBracketRound, ), 49] [lambdaExpression, =>, 49] [floatKeyWord, float, 49] [semicolon, ;, 49]
[privateKeyWord, private, 50] [attributeKeyWord, attribute, 50] [id, a, 50] [colon, :, 50] [floatKeyWord, float, 50] [semicolon, ;, 50]
[privateKeyWord, private, 51] [attributeKeyWord, attribute, 51] [id, b, 51] [colon, :, 51] [floatKeyWord, float, 51] [semicolon, ;, 51]
[privateKeyWord, private, 52] [attributeKeyWord, attribute, 52] [id, b, 52] [colon, :, 52] [floatKeyWord, float, 52] [semicolon, ;, 52]
[closedBracketCurly, }, 53] [semicolon, ;, 53]
[inlineComment, // 3.1.3, 54]
[classKeyWord, class, 55] [id, QUADRATIC, 55] [isaKeyWord, isa, 55] [id, POLYNOMIAL, 55] [openBracketCurly, {, 55]
[privateKeyWord, private, 56] [attributeKeyWord, attribute, 56] [id, a, 56] [colon, :, 56] [floatKeyWord, float, 56] [semicolon, ;, 56]
[privateKeyWord, private, 57] [attributeKeyWord, attribute, 57] [id, b, 57] [colon, :, 57] [floatKeyWord, float, 57] [semicolon, ;, 57]
[privateKeyWord, private, 58] [attributeKeyWord, attribute, 58] [id, c, 58] [colon, :, 58] [floatKeyWord, float, 58] [semicolon, ;, 58]
[publicKeyWord, public, 60] [constructorKeyWord, constructor, 60] [colon, :, 60] [openBracketRound, (, 60] [id, A, 60] [colon, :, 60] [floatKeyWord, float, 60] [comma, ,, 60] [id, B, 60] [colon, :, 60] [floatKeyWord, float, 60] [comma, ,, 60] [id, C, 60] [colon, :, 60] [floatKeyWord, float, 60] [closeBracketRound, ), 60] [semicolon, ;, 60]
[inlineComment, // 3.1.2, 61]
[publicKeyWord, public, 62] [functionKeyWord, function, 62] [id, evaluate, 62] [colon, :, 62] [openBracketRound, (, 62] [id, x, 62] [colon, :, 62] [floatKeyWord, float, 62] [closeBracketRound, ), 62] [lambdaExpression, =>, 62] [floatKeyWord, float, 62] [semicolon, ;, 62]
[closedBracketCurly, }, 63] [semicolon, ;, 63]
[functionKeyWord, function, 66] [id, POLYNOMIAL, 66] [doubleColon, ::, 66] [id, evaluate, 66] [openBracketRound, (, 66] [id, x, 66] [colon, :, 66] [floatKeyWord, float, 66] [closeBracketRound, ), 66] [lambdaExpression, =>, 66] [floatKeyWord, float, 66]
[openBracketCurly, {, 67]
[returnKeyWord, return, 68] [openBracketRound, (, 68] [integerType, 0, 68] [closeBracketRound, ), 68] [semicolon, ;, 68]
[closedBracketCurly, }, 69]
[inlineComment, // 3.1.2, 70]
[functionKeyWord, function, 71] [id, QUADRATIC, 71] [doubleColon, ::, 71] [constructorKeyWord, constructor, 71] [openBracketRound, (, 71] [id, A, 71] [colon, :, 71] [floatKeyWord, float, 71] [comma, ,, 71] [id, B, 71] [colon, :, 71] [floatKeyWord, float, 71] [comma, ,, 71] [id, C, 71] [colon, :, 71] [floatKeyWord, float, 71] [closeBracketRound, ), 71]
[openBracketCurly, {, 72]
[closedBracketCurly, }, 74]
[functionKeyWord, function, 76] [id, LINEAR, 76] [doubleColon, ::, 76] [id, evaluate, 76] [openBracketRound, (, 76] [id, x, 76] [colon, :, 76] [floatKeyWord, float, 76] [closeBracketRound, ), 76] [lambdaExpression, =>, 76] [floatKeyWord, float, 76]
[openBracketCurly, {, 77]
[localvarKeyWord, localvar, 78] [id, result, 78] [colon, :, 78] [floatKeyWord, float, 78] [semicolon, ;, 78]
[id, result, 79] [equals, =, 79] [floatType, 0.0, 79] [semicolon, ;, 79]
[id, result, 80] [equals, =, 80] [id, a, 80] [multiply, *, 80] [id, x, 80] [plus, +, 80] [id, b, 80] [semicolon, ;, 80]
[inlineComment, // 3.1.5, 81]
[returnKeyWord, return, 82] [openBracketRound, (, 82] [id, result, 82] [closeBracketRound, ), 82] [semicolon, ;, 82]
[closedBracketCurly, }, 83]
[inlineComment, // 3.1.2, 85]
[functionKeyWord, function, 86] [id, main, 86] [openBracketRound, (, 86] [closeBracketRound, ), 86] [lambdaExpression, =>, 86] [voidKeyWord, void, 86]
[openBracketCurly, {, 87]
[localvarKeyWord, localvar, 88] [id, f1, 88] [colon, :, 88] [id, LINEAR, 88] [openBracketRound, (, 88] [integerType, 2, 88] [comma, ,, 88] [floatType, 3.5, 88] [closeBracketRound, ), 88] [semicolon, ;, 88]
[localvarKeyWord, localvar, 89] [id, f2, 89] [colon, :, 89] [id, QUADRATIC, 89] [openBracketRound, (, 89] [minus, -, 89] [floatType, 2.0, 89] [comma, ,, 89] [floatType, 1.0, 89] [comma, ,, 89] [floatType, 0.0, 89] [closeBracketRound, ), 89] [semicolon, ;, 89]
[localvarKeyWord, localvar, 90] [id, counter, 90] [colon, :, 90] [integerKeyWord, integer, 90] [semicolon, ;, 90]
[whileKeyWord, while, 92] [openBracketRound, (, 92] [id, counter, 92] [lessThanOrEqualTo, <=, 92] [integerType, 10, 92] [closeBracketRound, ), 92]
[openBracketCurly, {, 93]
[inlineComment, // 3.1.5 and 3.1.7 and 3.1.8, 94]
[readKeyWord, read, 95] [openBracketRound, (, 95] [id, counter, 95] [closeBracketRound, ), 95] [semicolon, ;, 95]
[writeKeyWord, write, 96] [openBracketRound, (, 96] [id, f1, 96] [period, ., 96] [id, evaluate, 96] [openBracketRound, (, 96] [id, counter, 96] [closeBracketRound, ), 96] [closeBracketRound, ), 96] [semicolon, ;, 96]
[writeKeyWord, write, 97] [openBracketRound, (, 97] [id, f2, 97] [period, ., 97] [id, evaluate, 97] [openBracketRound, (, 97] [id, counter, 97] [closeBracketRound, ), 97] [closeBracketRound, ), 97] [semicolon, ;, 97]
[closedBracketCurly, }, 98] [semicolon, ;, 98]
[closedBracketCurly, }, 99]
[EOF, EOF, 103]